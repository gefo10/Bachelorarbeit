
cmake_minimum_required(VERSION 3.16)
project(CloudPointMeshGeneration)

set(CMAKE_CXX_STANDARD 14)

set(OPENCV_VERSION "" CACHE STRING "The opencv version to use in the project")

if (WIN32)
    set(EXTERNAL_DEPENDENCIES wsock32 ws2_32 ${EXTERNAL_DEPENDENCIES})
else (WIN32)
    set(EXTERNAL_DEPENDENCIES pthread ${EXTERNAL_DEPENDENCIES})
endif (WIN32)



set(GCC_COMPILE_FLAGS "-g -ggdb3")

add_definitions(${GCC_COMPILE_FLAGS})



find_package(Eigen3  REQUIRED)
find_package(PCL REQUIRED)

set(EXTERNAL_DEPENDENCIES ${GFLW_LIBRARIES} ${EXTERNAL_DEPENDENCIES})

add_definitions(${PCL_DEFINITIONS})
set(EXTERNAL_DEPENDENCIES ${PCL_LIBRARIES} ${EXTERNAL_DEPENDENCIES})



#set(EXTERNAL_DEPENDENCIES Eigen3::Eigen ${EXTERNAL_DEPENDENCIES})

find_package(realsense2 REQUIRED)
set(EXTERNAL_DEPENDENCIES realsense2::realsense2 ${EXTERNAL_DEPENDENCIES})

#find_package(OpenCV REQUIRED)
#set(EXTERNAL_DEPENDENCIES ${OpenCV_LIBS} ${EXTERNAL_DEPENDENCIES})

include_directories("include")



include_directories( ${OPENGL_INCLUDE_DIRS} ${GLUT_INCLUDE_DIRS})

add_executable(main testing.cpp)

add_subdirectory(scripts)


#target_include_directories(main
#    PUBLIC
#    $<BUILD_INTERFACE:scripts>
#    $<INSTALL_INTERFACE:scripts>
#
#    #PUBLIC $<INSTALL_INTERFACE:${realsense2_INCLUDE_DIR}>
#    #PUBLIC $<INSTALL_INTERFACE:${EIGEN3_INCLUDE_DIRS}>
#    #PUBLIC $<INSTALL_INTERFACE:${PCL_INCLUDE_DIRS}>
#)
#target_link_directories(main
#    PUBLIC 
#    $<BUILD_INTERFACE:scripts>
#    $<INSTALL_INTERFACE:scripts>
#    #PUBLIC $<INSTALL_INTERFACE:${PCL_LIBRARY_DIRS}>
#)


set(EXTERNAL_DEPENDENCIES ${EXTERNAL_DEPENDENCIES}  scanner)

target_link_libraries(main ${EXTERNAL_DEPENDENCIES})


#PACKAGING LIBRARY
include(GNUInstallDirs)


#install(DIRECTORY scripts/openGLPointCloudSystem/ DESTINATION TYPE INCLUDE)
#install(
#    EXPORT ScannerTargets
#    Destination ${CMAKE_INSTALL_LIBDIR}/scanner/cmake
#    NAMESPACE Scanner::
#    )
#
#
#include(CMakePackageConfigHelpers)
#
#set(LIB_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}/scanner)
#
#configure_package_config_file(
#    " ${CMAKE_CURRENT_SOURCE_DIR}/ScannerConfig.cmake.in"
#    " ${CMAKE_CURRENT_BINARY_DIR}/ScannerConfig.cmake"
#    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/scanner/cmake
#    PATH_VARS LIB_INSTALL_DIR
#    )
#
#write_basic_package_version_file(
#    ${CMAKE_CURRENT_BINARY_DIR}/ScannerConfigVersion.cmake
#    VERSION 0.0.1
#    COMPATIBILITY SameMajorVersion 
#    )
#
#install(
#    FILES "${CMAKE_CURRENT_BINARY_DIR}/ScannerConfig.cmake"
#    "${CMAKE_CURRENT_BINARY_DIR}/ScannerConfigVersion.cmake"
#    DESTINATION "${CMAKE_INSTALL_LIBDIR}/scanner/cmake"
#    )
